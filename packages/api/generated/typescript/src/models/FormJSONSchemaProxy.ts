/* tslint:disable */
/* eslint-disable */
/**
 * AWS Docs API
 * API for AWS Docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FormFieldExtractionMetadata,
    FormFieldExtractionMetadataFromJSON,
    FormFieldExtractionMetadataFromJSONTyped,
    FormFieldExtractionMetadataToJSON,
} from './FormFieldExtractionMetadata';
import {
    FormJSONSchema,
    FormJSONSchemaFromJSON,
    FormJSONSchemaFromJSONTyped,
    FormJSONSchemaToJSON,
} from './FormJSONSchema';

/**
 * Schema for a json schema for a form, an extended definition of a standard JSON schema. See  See https://github.com/OAI/OpenAPI-Specification/blob/main/schemas/v3.0/schema.yaml
 * @export
 * @interface FormJSONSchemaProxy
 */
export interface FormJSONSchemaProxy {
    /**
     * The relative order of this property (for use in object types)
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    order?: number;
    /**
     * 
     * @type {FormFieldExtractionMetadata}
     * @memberof FormJSONSchemaProxy
     */
    extractionMetadata?: FormFieldExtractionMetadata;
    /**
     * 
     * @type {string}
     * @memberof FormJSONSchemaProxy
     */
    title?: string;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    multipleOf?: number;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    maximum?: number;
    /**
     * 
     * @type {boolean}
     * @memberof FormJSONSchemaProxy
     */
    exclusiveMaximum?: boolean;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    minimum?: number;
    /**
     * 
     * @type {boolean}
     * @memberof FormJSONSchemaProxy
     */
    exclusiveMinimum?: boolean;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    maxLength?: number;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    minLength?: number;
    /**
     * 
     * @type {string}
     * @memberof FormJSONSchemaProxy
     */
    pattern?: string;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    maxItems?: number;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    minItems?: number;
    /**
     * 
     * @type {boolean}
     * @memberof FormJSONSchemaProxy
     */
    uniqueItems?: boolean;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    maxProperties?: number;
    /**
     * 
     * @type {number}
     * @memberof FormJSONSchemaProxy
     */
    minProperties?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof FormJSONSchemaProxy
     */
    required?: Array<string>;
    /**
     * 
     * @type {Array<any>}
     * @memberof FormJSONSchemaProxy
     */
    _enum?: Array<any>;
    /**
     * 
     * @type {string}
     * @memberof FormJSONSchemaProxy
     */
    typeOf?: FormJSONSchemaProxyTypeOfEnum;
    /**
     * 
     * @type {FormJSONSchema}
     * @memberof FormJSONSchemaProxy
     */
    items?: FormJSONSchema;
    /**
     * 
     * @type {{ [key: string]: FormJSONSchema; }}
     * @memberof FormJSONSchemaProxy
     */
    properties?: { [key: string]: FormJSONSchema; };
    /**
     * 
     * @type {boolean}
     * @memberof FormJSONSchemaProxy
     */
    additionalProperties?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FormJSONSchemaProxy
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof FormJSONSchemaProxy
     */
    formatType?: string;
    /**
     * 
     * @type {any}
     * @memberof FormJSONSchemaProxy
     */
    _default?: any | null;
    /**
     * 
     * @type {boolean}
     * @memberof FormJSONSchemaProxy
     */
    nullable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FormJSONSchemaProxy
     */
    readOnly?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FormJSONSchemaProxy
     */
    writeOnly?: boolean;
    /**
     * 
     * @type {any}
     * @memberof FormJSONSchemaProxy
     */
    example?: any | null;
    /**
     * 
     * @type {boolean}
     * @memberof FormJSONSchemaProxy
     */
    deprecated?: boolean;
}

/**
* @export
* @enum {string}
*/
export type FormJSONSchemaProxyTypeOfEnum =
    'array' | 
    'boolean' | 
    'integer' | 
    'number' | 
    'object' | 
    'string'



export function FormJSONSchemaProxyFromJSON(json: any): FormJSONSchemaProxy {
    return FormJSONSchemaProxyFromJSONTyped(json, false);
}

export function FormJSONSchemaProxyFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormJSONSchemaProxy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'order': !exists(json, 'order') ? undefined : json['order'],
        'extractionMetadata': !exists(json, 'extractionMetadata') ? undefined : FormFieldExtractionMetadataFromJSON(json['extractionMetadata']),
        'title': !exists(json, 'title') ? undefined : json['title'],
        'multipleOf': !exists(json, 'multipleOf') ? undefined : json['multipleOf'],
        'maximum': !exists(json, 'maximum') ? undefined : json['maximum'],
        'exclusiveMaximum': !exists(json, 'exclusiveMaximum') ? undefined : json['exclusiveMaximum'],
        'minimum': !exists(json, 'minimum') ? undefined : json['minimum'],
        'exclusiveMinimum': !exists(json, 'exclusiveMinimum') ? undefined : json['exclusiveMinimum'],
        'maxLength': !exists(json, 'maxLength') ? undefined : json['maxLength'],
        'minLength': !exists(json, 'minLength') ? undefined : json['minLength'],
        'pattern': !exists(json, 'pattern') ? undefined : json['pattern'],
        'maxItems': !exists(json, 'maxItems') ? undefined : json['maxItems'],
        'minItems': !exists(json, 'minItems') ? undefined : json['minItems'],
        'uniqueItems': !exists(json, 'uniqueItems') ? undefined : json['uniqueItems'],
        'maxProperties': !exists(json, 'maxProperties') ? undefined : json['maxProperties'],
        'minProperties': !exists(json, 'minProperties') ? undefined : json['minProperties'],
        'required': !exists(json, 'required') ? undefined : json['required'],
        '_enum': !exists(json, 'enum') ? undefined : json['enum'],
        'typeOf': !exists(json, 'typeOf') ? undefined : json['typeOf'],
        'items': !exists(json, 'items') ? undefined : FormJSONSchemaFromJSON(json['items']),
        'properties': !exists(json, 'properties') ? undefined : (mapValues(json['properties'], FormJSONSchemaFromJSON)),
        'additionalProperties': !exists(json, 'additionalProperties') ? undefined : json['additionalProperties'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'formatType': !exists(json, 'formatType') ? undefined : json['formatType'],
        '_default': !exists(json, 'default') ? undefined : json['default'],
        'nullable': !exists(json, 'nullable') ? undefined : json['nullable'],
        'readOnly': !exists(json, 'readOnly') ? undefined : json['readOnly'],
        'writeOnly': !exists(json, 'writeOnly') ? undefined : json['writeOnly'],
        'example': !exists(json, 'example') ? undefined : json['example'],
        'deprecated': !exists(json, 'deprecated') ? undefined : json['deprecated'],
    };
}

export function FormJSONSchemaProxyToJSON(value?: FormJSONSchemaProxy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'order': value.order,
        'extractionMetadata': FormFieldExtractionMetadataToJSON(value.extractionMetadata),
        'title': value.title,
        'multipleOf': value.multipleOf,
        'maximum': value.maximum,
        'exclusiveMaximum': value.exclusiveMaximum,
        'minimum': value.minimum,
        'exclusiveMinimum': value.exclusiveMinimum,
        'maxLength': value.maxLength,
        'minLength': value.minLength,
        'pattern': value.pattern,
        'maxItems': value.maxItems,
        'minItems': value.minItems,
        'uniqueItems': value.uniqueItems,
        'maxProperties': value.maxProperties,
        'minProperties': value.minProperties,
        'required': value.required,
        'enum': value._enum,
        'typeOf': value.typeOf,
        'items': FormJSONSchemaToJSON(value.items),
        'properties': value.properties === undefined ? undefined : (mapValues(value.properties, FormJSONSchemaToJSON)),
        'additionalProperties': value.additionalProperties,
        'description': value.description,
        'formatType': value.formatType,
        'default': value._default,
        'nullable': value.nullable,
        'readOnly': value.readOnly,
        'writeOnly': value.writeOnly,
        'example': value.example,
        'deprecated': value.deprecated,
    };
}

