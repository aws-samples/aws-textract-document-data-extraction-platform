/* tslint:disable */
/* eslint-disable */
/**
 * AWS Docs API
 * API for AWS Docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CreateUpdateDetails,
    CreateUpdateDetailsFromJSON,
    CreateUpdateDetailsFromJSONTyped,
    CreateUpdateDetailsToJSON,
} from './CreateUpdateDetails';
import {
    IngestionExecution,
    IngestionExecutionFromJSON,
    IngestionExecutionFromJSONTyped,
    IngestionExecutionToJSON,
} from './IngestionExecution';
import {
    S3Location,
    S3LocationFromJSON,
    S3LocationFromJSONTyped,
    S3LocationToJSON,
} from './S3Location';
import {
    StatusTransition,
    StatusTransitionFromJSON,
    StatusTransitionFromJSONTyped,
    StatusTransitionToJSON,
} from './StatusTransition';

/**
 * Metadata about a document
 * @export
 * @interface DocumentMetadata
 */
export interface DocumentMetadata {
    /**
     * 
     * @type {string}
     * @memberof DocumentMetadata
     */
    documentId: string;
    /**
     * The name of the document
     * @type {string}
     * @memberof DocumentMetadata
     */
    name: string;
    /**
     * 
     * @type {S3Location}
     * @memberof DocumentMetadata
     */
    location: S3Location;
    /**
     * 
     * @type {IngestionExecution}
     * @memberof DocumentMetadata
     */
    ingestionExecution?: IngestionExecution;
    /**
     * The number of pages in the document, discovered during classification
     * @type {number}
     * @memberof DocumentMetadata
     */
    numberOfPages?: number;
    /**
     * The number of forms discovered within the document
     * @type {number}
     * @memberof DocumentMetadata
     */
    numberOfClassifiedForms?: number;
    /**
     * Presigned url for fetching the document (returned on get individual document only)
     * @type {string}
     * @memberof DocumentMetadata
     */
    url?: string;
    /**
     * A log of status transitions
     * @type {Array<StatusTransition>}
     * @memberof DocumentMetadata
     */
    statusTransitionLog: Array<StatusTransition>;
    /**
     * 
     * @type {string}
     * @memberof DocumentMetadata
     */
    createdBy?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentMetadata
     */
    updatedBy?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentMetadata
     */
    createdTimestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof DocumentMetadata
     */
    updatedTimestamp?: string;
}


export function DocumentMetadataFromJSON(json: any): DocumentMetadata {
    return DocumentMetadataFromJSONTyped(json, false);
}

export function DocumentMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentMetadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'documentId': json['documentId'],
        'name': json['name'],
        'location': S3LocationFromJSON(json['location']),
        'ingestionExecution': !exists(json, 'ingestionExecution') ? undefined : IngestionExecutionFromJSON(json['ingestionExecution']),
        'numberOfPages': !exists(json, 'numberOfPages') ? undefined : json['numberOfPages'],
        'numberOfClassifiedForms': !exists(json, 'numberOfClassifiedForms') ? undefined : json['numberOfClassifiedForms'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'statusTransitionLog': ((json['statusTransitionLog'] as Array<any>).map(StatusTransitionFromJSON)),
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
        'createdTimestamp': !exists(json, 'createdTimestamp') ? undefined : json['createdTimestamp'],
        'updatedTimestamp': !exists(json, 'updatedTimestamp') ? undefined : json['updatedTimestamp'],
    };
}

export function DocumentMetadataToJSON(value?: DocumentMetadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'documentId': value.documentId,
        'name': value.name,
        'location': S3LocationToJSON(value.location),
        'ingestionExecution': IngestionExecutionToJSON(value.ingestionExecution),
        'numberOfPages': value.numberOfPages,
        'numberOfClassifiedForms': value.numberOfClassifiedForms,
        'url': value.url,
        'statusTransitionLog': ((value.statusTransitionLog as Array<any>).map(StatusTransitionToJSON)),
        'createdBy': value.createdBy,
        'updatedBy': value.updatedBy,
        'createdTimestamp': value.createdTimestamp,
        'updatedTimestamp': value.updatedTimestamp,
    };
}

