{
  "tasks": {
    "build": {
      "name": "build",
      "description": "Full release build",
      "steps": [
        {
          "spawn": "pre-compile"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "post-compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "compile": {
      "name": "compile",
      "description": "Only compile",
      "steps": [
        {
          "exec": "DISABLE_ESLINT_PLUGIN=true react-app-rewired build --verbose"
        }
      ]
    },
    "copy:api-docs": {
      "name": "copy:api-docs",
      "steps": [
        {
          "exec": "rm -rf public/api-docs"
        },
        {
          "exec": "mkdir -p public/api-docs"
        },
        {
          "exec": "cp -r ../api/generated/documentation/html_redoc/index.html public/api-docs/index.html"
        }
      ]
    },
    "default": {
      "name": "default",
      "description": "Synthesize project files"
    },
    "dev": {
      "name": "dev",
      "description": "Starts the react application",
      "env": {
        "ESLINT_NO_DEV_ERRORS": "true",
        "TSC_COMPILE_ON_ERROR": "true"
      },
      "steps": [
        {
          "exec": "DISABLE_ESLINT_PLUGIN=true react-app-rewired start"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern $@ src test build-tools",
          "receiveArgs": true
        }
      ]
    },
    "install": {
      "name": "install",
      "description": "Install project dependencies and update lockfile (non-frozen)",
      "steps": [
        {
          "exec": "pnpm i --no-frozen-lockfile"
        }
      ]
    },
    "install:ci": {
      "name": "install:ci",
      "description": "Install project dependencies using frozen lockfile",
      "steps": [
        {
          "exec": "pnpm i --frozen-lockfile"
        }
      ]
    },
    "package": {
      "name": "package",
      "description": "Creates the distribution package"
    },
    "post-compile": {
      "name": "post-compile",
      "description": "Runs after successful compilation"
    },
    "post-upgrade": {
      "name": "post-upgrade",
      "description": "Runs after upgrading dependencies"
    },
    "pre-compile": {
      "name": "pre-compile",
      "description": "Prepare the project for compilation",
      "steps": [
        {
          "spawn": "copy:api-docs"
        }
      ]
    },
    "test": {
      "name": "test",
      "description": "Run tests",
      "steps": [
        {
          "exec": "DISABLE_ESLINT_PLUGIN=true react-app-rewired test --watchAll=false"
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "upgrade": {
      "name": "upgrade",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "pnpx npm-check-updates@16 --upgrade --target=minor --peer --dep=dev,peer,prod,optional --filter=@testing-library/jest-dom,@testing-library/react,@testing-library/user-event,@types/humanize-duration,@types/jest,@types/lodash,@types/node,@types/react,@types/react-dom,@types/react-router-dom,@types/swagger-ui-react,@typescript-eslint/eslint-plugin,@typescript-eslint/parser,constructs,eslint-config-prettier,eslint-import-resolver-typescript,eslint-plugin-import,eslint-plugin-prettier,eslint,prettier,projen,react-app-rewired,typescript,@aws-northstar/ui,@cloudscape-design/board-components,@cloudscape-design/components,@material-ui/icons,ace-builds,aws-northstar,aws4fetch,humanize-duration,lodash,react,react-ace,react-dom,react-pdf,react-router-dom,react-scripts,react-zoom-pan-pinch,web-vitals"
        },
        {
          "exec": "pnpm i --no-frozen-lockfile"
        },
        {
          "exec": "pnpm update @testing-library/jest-dom @testing-library/react @testing-library/user-event @types/humanize-duration @types/jest @types/lodash @types/node @types/react @types/react-dom @types/react-router-dom @types/swagger-ui-react @typescript-eslint/eslint-plugin @typescript-eslint/parser constructs eslint-config-prettier eslint-import-resolver-typescript eslint-plugin-import eslint-plugin-prettier eslint prettier projen react-app-rewired typescript @aws-northstar/ui @cloudscape-design/board-components @cloudscape-design/components @material-ui/icons ace-builds aws-northstar aws4fetch humanize-duration lodash react react-ace react-dom react-pdf react-router-dom react-scripts react-zoom-pan-pinch web-vitals"
        },
        {
          "exec": "npx projen"
        },
        {
          "spawn": "post-upgrade"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc --build -w"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(pnpm -c exec \"node --print process.env.PATH\")",
    "DISABLE_ESLINT_PLUGIN": "true"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
